const { MessageEmbed } = require ('discord.js')
const config = require('../config.json')

module.exports = {
    data: {
        name: 'commands'
    },
    async run(client, interaction) {
        if(!interaction.isSelectMenu()) return;
        switch (interaction.values[0]) {
            case 'configuracion':
                const embedConfiguracion = new MessageEmbed()
                .setColor(config.defaultSuccessColor)
                .setTitle('Comandos de configuracion')
                .addField('> config channel enable [@channel]', 'Habilita que el bot pueda responder interacciones en un canal', true)
                .addField('> config channel disable [@channel]', 'Deshabilita que el bot pueda responder interacciones en un canal', true)
                .setFooter('[] obligatorio {} opcional')
                .setTimestamp()
                 interaction.update({ content: ' ', embeds: [embedConfiguracion]})
            break
            case 'diversion':
                const embedDiversion = new MessageEmbed()
                .setColor(config.defaultSuccessColor)
                .setTitle('Comandos de diversion')
                .addField('> 8ball [text]', 'Preguntale algo al bot, te respondera lo que sea', true)
                .addField('> ascii [text]', 'El bot te convertira el texto a un ASCII', true)
                .addField('> cookie [@user]', 'Dale una galleta a un usuario', true)
                .addField('> bean [@user]', 'Benea a algun miembro del servidor (Juegale una broma)', true)
                .addField('> hack [@user]', 'Hackea a algun miembro del servidor (Juegale una broma)', true)
                .addField('> meme', 'El bot te mandara un meme', true)
                .addField('> say [text]', 'Escribe al bot, lo que quieres que diga por vos', true)
                .addField('> ship [@user]', 'Mide el amor que tienen entre vos y alguien mas', true)
                .addField('> chiste', 'Haz que el bot diga un chiste malo', true)
                .addField('> sesiones', 'Inicia alguna aplicaciones dentro de Discord para jugar o ver con amigos (Tambien solo)')
                .setFooter('[] obligatorio {} opcional')
                .setTimestamp()
                 interaction.update({ content: ' ', embeds: [embedDiversion]})
            break
            case 'images':
                const embedImages = new MessageEmbed()
                .setColor(config.defaultSuccessColor) 
                .setTitle('Comandos de imagenes')
                .addField('> images beautiful', 'Demuestrale a todo el mundo que sos una persona hermosa', true)
                .addField('> images gay {@user}', 'Di que sos o dile a alguien que es gay', true)
                .addField('> images invert', 'Invierte los colores de tu avatar', true)
                .addField('> images delete {@user}', 'Borrate a vos mismo o alguien mas', true)
                .addField('> images rip {@user}', 'Di que te moriste o que algun usuario se murio', true)
                .addField('> images spank [@user]', 'Dale nalgadas a un usuario', true)
                .addField('> images trash {@user}', 'Un meme en el cual te relacionan a vos o a otro con un tacho de basura', true)
                .addField('> images wanted {@user}', 'Una imagen donde sales vos o alguien mas buscado por la justicia', true)
                .addField('> images clyde [text]', 'Crea una imagen como si lo estuviera diciendo Clyde (El bot oficial de Discord)', true)
                .addField('> images onlyfans-cards {@user}', 'Devuelve una tarjeta de onlyfans con tu avatar o la de otra persona', true)
                .setFooter('[] obligatorio {} opcional')
                .setTimestamp()
                 interaction.update({ content: ' ', embeds: [embedImages]})
            break
            case 'informacion': 
            const embedInformacion = new MessageEmbed()
                .setColor(config.defaultSuccessColor) 
                .setTitle('Comandos de informacion')
                .addField('> avatar {@user}', 'Muestra tu avatar o el de alguien mas', true)
                .addField('> info channel [@channel]', 'Muestra la informacion de un canal, sea texto o voz', true)
                .addField('> info role [@role]', 'Muestra la informacion de un rol', true)
                .addField('> covid [pais]', 'Muestra informacion del covid-19 en un pais', true)
                .addField('> help', 'Muestra informacion del bot', true)
                .addField('> info server', 'Muestra informacion del servidor', true)
                .addField('> info user {@user}', 'Muestra tu informacion o la de otro', true)
                .addField('> info bot', 'Muestra informacion del bot', true)
                .addField('> invite ', 'Crea una invitacion para agregar el bot a algun servidor', true)
                .addField('> support ', 'Crea una invitacion para unirte al servidor de soporte', true)
                .addField('> vote ', 'Comparte los links donde podras votar por el bot', true)
                .setFooter('[] obligatorio {} opcional')
                .setTimestamp()
                interaction.update({ content: ' ', embeds: [embedInformacion]})
            break
            case 'interaccion':
            const embedInteracciones = new MessageEmbed()
                .setColor(config.defaultSuccessColor) 
                .setTitle('Comandos de interacciones')
                .addField('> interact angry [@user]', 'Enojate con alguien', true)
                .addField('> interact baka [@user]', 'Dile tonto a alguien', true)
                .addField('> interact bite [@user]', 'Muerde a alguien', true)
                .addField('> interact blush', 'Sonrojate', true)
                .addField('> interact bored', 'Demuestra que estas aburrido', true)
                .addField('> interact bonk [@user]', 'Golpeale a alguien en la cabeza', true)
                .addField('> interact bully [@user]', 'Hazle bullying a un usuario', true)
                .addField('> interact bye {@user}', 'Golpea en la cabeza a alguien', true)
                .addField('> interact cry', 'Demuestra que estas triste', true)
                .addField('> interact cringe {@user}', 'Mira a alguien con asco o demuestra que algo te dio asco', true)
                .addField('> interact cuddle [@user]', 'Acurrucate con alguien', true)
                .addField('> interact feed {@user}', 'Come vos solo o dale de comer a alguien', true)
                .addField('> interact hate [@user]', 'Mira a alguien con odio', true)
                .addField('> interact hi {@user}', 'Saluda a alguien o a todo el mundo', true)
                .addField('> interact hug [@user]', 'Dale un abrazo a alguien', true)
                .addField('> interact kill [@user]', 'Mata a alguien', true)
                .addField('> interact lick [@user]', 'Lame a un usuario', true)
                .addField('> interact nope [@user]', 'Dile que no a alguien', true)
                .addField('> interact pat [@user]', 'Acaricia a alguien en la cabeza', true)
                .addField('> interact poke [@user]', 'Molesta a un usuario', true)
                .addField('> interact sleep {@user}', 'Duerme con alguien o vos solo', true)
                .addField('> interact happy', 'Di que estas feliz', true)
                .addField('> interact think {@user}', 'Piensa en algo random o en algun usuario', true)
                .addField('> interact yes [@user]', 'Dile que si a alguien', true)
                .setFooter('[] obligatorio {} opcional')
                .setTimestamp()
                interaction.update({ content: ' ', embeds: [embedInteracciones]})
            break
            case 'utilidad':
                const embedUtilidad = new MessageEmbed()
                .setColor(config.defaultSuccessColor)
                .setTitle('Comandos de utilidades')
                .addField('> image [text]', 'Busca una imagen especifica de lo que vos le escribas', true)
                .addField('> lyrics [name-song]', 'Busca la letra de una cancion', true)
                .addField('> password [number]', 'Genera una contraseña aleatoria de entre 6 a 20 caracteres', true)
                .addField('> ping', 'Revisa el ping del bot y tu propio ping', true)
                .addField('> translate [text]', 'Traduce un texto al español', true)
                .addField('> anime [name]', 'Busca informacion de algun anime', true)
                .setFooter('[] obligatorio {} opcional')
                .setTimestamp()
                interaction.update({ content: ' ', embeds: [embedUtilidad]})
            break
            case 'games':
                const embedGames = new MessageEmbed()
                .setColor(config.defaultSuccessColor)
                .setTitle('Comandos de videojuegos')
                .addField('> game geometry-dash level [id]', 'Regresa informacion de un nivel de Geometry Dash', true)
                .addField('> game geometry-dash user [user]', 'Regresa informacion de un usuari de Geometry Dash', true)
                .addField('> game geometry-dash text [text]', 'Regresa el texto que introduzcas con un formato estilo Geometry Dash', true)
                .addField('> game minecraft server [ip] {port-server}', 'Regresa informacion de un servidor de Minecraft', true)
                .addField('> game minecraft logro [text]', 'Regresa una imagen de un logro de Minecraft con el texto que quieras.', true)
                .addField('> game minecraft hypixel [name]', 'Regresa informacion de tu cuenta en Hypixel', true)
                .addField('> game minecraft skin [name]', 'Regresa tu skin de Minecraft en version 3D', true)
                .setTimestamp()
                .setFooter('[] obligatorio {} opcional')
                interaction.update({ content: ' ', embeds: [embedGames]})
            break
            }
        }
    }